0.5.0
~ Lens.satisfy is deprecated
~ Lens.filter does what satisfy used to do. Use Lens.all |> Lens.filter to emulate the old behavior
+ Lens.reject as a counterpart to Lens.filter
+ Lens.key?/Lens.keys? that ignore missing keys

0.4.0
~ Make the values returned from `recur` follow the part -> whole pattern
+ Lens.map_keys and Lens.map_values for working with maps

0.3.1
~ Fix warnings on Elixir 1.4.0

0.3.0
+ Lens.const for defining lenses that always focus on the same value
+ Lens.into for lenses that can collect into a specific Collectable on update

0.2.0
+ deflensp for easily defining private lenses
+ Lens.back for focusing after the end of a list
+ Lens.front for focusing before the beginning of a list
+ Lens.behind for focusing after an element in a list
+ Lens.before for focusing before an element in a list
+ Lens.multiple for combining many lenses
+ Lens.indices for focusing on many indices at once

0.1.1
~ Fixed typespec for Lens.at

0.1.0
+ Ability to use Lens with Access/get_in/update_in/get_and_update_in
~ Swap the order of arguments so that the Lens.t is the first argument in Lens
	functions

0.0.1
~ Initial release
